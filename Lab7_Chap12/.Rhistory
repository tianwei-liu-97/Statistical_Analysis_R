require(knitr)
require(haven)  ## install.packages("haven")
require(car)    ## install.packages("car")
require(AER)    ## install.packages("AER")
library(Hmisc)  ## use the describe command
install.packages('Hmisc')
install.packages('mfx')
rm(list = ls(all = TRUE))   # Remove objects from the previous session
dta <- read_dta('Ch12_lab_Titanic.dta')
## setwd("/Users/baileyma/Documents/Teaching/PPOL560/PPOL560_data")
rm(list = ls(all = TRUE))   # Remove objects from the previous session
dta <- read_dta('Ch12_lab_Titanic.dta')
## setwd("/Users/baileyma/Documents/Teaching/PPOL560/PPOL560_data")
require(knitr)
require(haven)  ## install.packages("haven")
require(car)    ## install.packages("car")
require(AER)    ## install.packages("AER")
library(Hmisc)  ## use the describe command
library(mfx)
opts_chunk$set(echo = TRUE)
options(digits = 6)
# Create dummies
dta$pclass_2 <- (dta$pclass == 2)
dta$pclass_3 <- (dta$pclass == 3)
# Run LMP
reg.1a <- lm(survived ~ pclass_2 + pclass_3, data = dta)
summary(reg.1a)
View(dta)
dta$female    = (dta$sex == "female")
dta$child     = (dta$age < 17)
dta$Queensland= (dta$embarked == "Q")
dta$Cherbourg = (dta$embarked == "C")
dta$female    = (dta$sex == "female")
dta$child     = (dta$age < 17)
dta$Queenstown= (dta$embarked == "Q")
dta$Cherbourg = (dta$embarked == "C")
reg.1b <- lm(survived ~ female + child + Queenstown + Cherbourg + age, data = dta)
summary(reg.1b)
max(predict(reg.1b))
reg.1b <- lm(survived ~ pclass_2 + pclass_3 + female + child + Queenstown + Cherbourg + age, data = dta)
summary(reg.1b)
max(predict(reg.1b))
min(predict(reg.1b))
id <- names(predict(reg.1b)[predict(reg.1b) == min(predict(reg.1b))])
id <- as.numeric(names(predict(reg.1b)[predict(reg.1b) == min(predict(reg.1b))]))
id <- as.numeric(names(predict(reg.1b)[predict(reg.1b) == min(predict(reg.1b))]))
c(dta$name[id])
id <- as.numeric(names(predict(reg.1b)[predict(reg.1b) == min(predict(reg.1b))]))
c(dta$name[id], dta$age[id])
id <- as.numeric(names(predict(reg.1b)[predict(reg.1b) == min(predict(reg.1b))]))
c(dta$name[id], dta$age[id], dta$sex[id], dta$pclass[id])
id2 <- as.numeric(names(predict(reg.1b)[predict(reg.1b) == max(predict(reg.1b))]))
dta$name[id2]
knitr::opts_chunk$set(echo = TRUE)
load('Ch12_Exercise2_Global_warming.Rdata')
load('Ch12_Exercise2_Global_warming.Rdata')
load('Ch12_Exercise2_Global_warming.Rdata')
View(dta)
View(dta)
reg2a <- lm(humancause ~ male + white + educ + incomecat + age + party7, data = dta)
summary(reg2a)
min(predict(reg2a))
max(predict(reg2a))
reg2a2 <- lm(humancause ~ male + white + educ + incomecat + age + I(age^2) + party7, data = dta)
summary(reg2a2)
plot(dta$age, dta$humancause,col= "darkblue", cex.axis =0.8,  xlim = c(0, 1), xlab = "Level of Internet Penetration", ylab = "Cash Use", main = "Internet Penetration vs Cash Use", pch = 19)
curve(coef(reg2a2)[1] + coef(reg_poly)[6]*x + coef(reg_poly)[7]*x^2, add=T, lwd = 2., col="red")
plot(dta$age, dta$humancause,col= "darkblue", cex.axis =0.8,  xlim = c(0, 1), xlab = "Level of Internet Penetration", ylab = "Cash Use", main = "Internet Penetration vs Cash Use", pch = 19)
curve(coef(reg2a2)[1] + coef(reg2a2)[6]*x + coef(reg2a2)[7]*x^2, add=T, lwd = 2., col="red")
plot(dta$age, dta$humancause,col= "darkblue", cex.axis =0.8, xlab = "Level of Internet Penetration", ylab = "Cash Use", main = "Internet Penetration vs Cash Use", pch = 19)
curve(coef(reg2a2)[1] + coef(reg2a2)[6]*x + coef(reg2a2)[7]*x^2, add=T, lwd = 2., col="red")
curve(coef(reg2a2)[1] + coef(reg2a2)[6]*x + coef(reg2a2)[7]*x^2, add=T, lwd = 2., col="red")
reg2b <- glm(humancause ~ male + white + educ + incomecat + age + I(age^2) + party7, family = bionomial(link='probit'),data = dta)
reg2b <- glm(humancause ~ male + white + educ + incomecat + age + I(age^2) + party7, family = binomial(link='probit'),data = dta)
reg2b <- glm(humancause ~ male + white + educ + incomecat + age + I(age^2) + party7, family = binomial(link='probit'),data = dta)
summary(reg2b)
rm(list = ls(all = TRUE))   # Remove objects from the previous session
dta <- read_dta('Ch12_lab_Titanic.dta')
## setwd("/Users/baileyma/Documents/Teaching/PPOL560/PPOL560_data")
reg3 <- glm(survived ~ pclass_2 + pclass_3, data = dta, family = binomial(link = 'probit'))
# Create dummies
dta$pclass_2 <- (dta$pclass == 2)
dta$pclass_3 <- (dta$pclass == 3)
# Run LMP
reg.1a <- lm(survived ~ pclass_2 + pclass_3, data = dta)
summary(reg.1a)
reg3 <- glm(survived ~ pclass_2 + pclass_3, data = dta, family = binomial(link = 'probit'))
summary(reg3)
## Create dummy variables
dta$female    = (dta$sex == "female")
dta$child     = (dta$age < 17)
dta$Queenstown= (dta$embarked == "Q")
dta$Cherbourg = (dta$embarked == "C")
reg4 < glm(survived ~ pclass_2 + pclass_3 + age + female + child + Queenstown + Cherbourg, data = dta, family = binomial(link = 'probit'))
reg4 <- glm(survived ~ pclass_2 + pclass_3 + age + female + child + Queenstown + Cherbourg, data = dta, family = binomial(link = 'probit'))
summary(reg4)
knitr::opts_chunk$set(echo = TRUE)
library('ggplot2')
library('ggThemeAssist')
load("Chapter7_lab.Rdata")
dta <- dta[dta$wage96 < 500,]
p <- ggplot(dta, aes(x = age, y = wage96, fill = esteem80, color = esteem80)) + geom_point() + geom_jitter(width = 0.2)+ scale_x_continuous(name="Age", breaks=seq(30, 40,1))
p
knitr::opts_chunk$set(echo = TRUE)
install.packages("cowsay")
install.packages("cowsay")
library("cowsay")
say("hello")
p <- ggplot(dta, aes(x = age, y = wage96, fill = esteem80, color = esteem80)) + geom_point() + geom_jitter(width = 0.2)+ scale_x_continuous(name="Age", breaks=seq(30, 40,1))
p
ggThemeAssist:::ggThemeAssistAddin()
p <- ggplot(dta, aes(x = age, y = wage96, fill = esteem80, color = esteem80)) + geom_point() + geom_jitter(width = 0.2)+ scale_x_continuous(name="Age", breaks=seq(30, 40,1))
p + theme(plot.subtitle = element_text(vjust = 1),
plot.caption = element_text(vjust = 1),
legend.position = "left") +labs(x = "Soemthing X")
min(predict(reg4))
min(predict(reg4))
warnings()
min(predict(reg4))
min(predict(reg4))
reg4 <- glm(survived ~ pclass_2 + pclass_3 + age + female + child + Queenstown + Cherbourg, data = dta, family = binomial(link = 'probit'))
rm(list = ls(all = TRUE))   # Remove objects from the previous session
dta <- read_dta('Ch12_lab_Titanic.dta')
## setwd("/Users/baileyma/Documents/Teaching/PPOL560/PPOL560_data")
# Create dummies
dta$pclass_2 <- (dta$pclass == 2)
dta$pclass_3 <- (dta$pclass == 3)
# Run LMP
reg.1a <- lm(survived ~ pclass_2 + pclass_3, data = dta)
summary(reg.1a)
## Create dummy variables
dta$female    = (dta$sex == "female")
dta$child     = (dta$age < 17)
dta$Queenstown= (dta$embarked == "Q")
dta$Cherbourg = (dta$embarked == "C")
reg.1b <- lm(survived ~ pclass_2 + pclass_3 + female + child + Queenstown + Cherbourg + age, data = dta)
summary(reg.1b)
reg3 <- glm(survived ~ pclass_2 + pclass_3, data = dta, family = binomial(link = 'probit'))
summary(reg3)
reg4 <- glm(survived ~ pclass_2 + pclass_3 + age + female + child + Queenstown + Cherbourg, data = dta, family = binomial(link = 'probit'))
summary(reg4)
min(predict(reg4))
max(predict(reg4))
id3 <- as.numeric(names(predict(reg4)[predict(reg4) == max(predict(reg4))]))
dta$name[id2]
id3 <- as.numeric(names(predict(reg4)[predict(reg4) == max(predict(reg4))]))
dta$name[id3]
reg4 <- glm(survived ~ pclass_2 + pclass_3 + age + female + child + Queenstown + Cherbourg, data = dta, family = binomial(link = 'probit'))
summary(reg4)
min(predict(reg4))
reg3 <- glm(survived ~ pclass_2 + pclass_3, data = dta, family = binomial(link = 'probit'))
summary(reg3)
min(predict(reg3))
p1 = pnorm(reg4$coefficients[1] + reg4$coefficients[2]*dta$pclass_2 + reg4$coefficients[3]*dta$pclass_3 + reg4$coefficients[4]*dta$age + reg4$coefficients[5]* dta$female + reg4$coefficients[6]*0 + reg4$coefficients[7]*dta$Queenstown + reg4$coefficients[8]* dta$Cherbourg)
p2 = pnorm(reg4$coefficients[1] + reg4$coefficients[2]*dta$pclass_2 + reg4$coefficients[3]*dta$pclass_3 + reg4$coefficients[4]*(dta$age+1) + reg4$coefficients[5]* dta$female + reg4$coefficients[6]*0 + reg4$coefficients[7]*dta$Queenstown + reg4$coefficients[8]* dta$Cherbourg)
diffage = p2 - p1
describe(diffage)
probitmfx(formula = survived ~ pclass_2 + pclass_3 + age + female + child + Queenstown + Cherbourg, data = dta, atmean = FALSE)
min(predict(reg2b))
knitr::opts_chunk$set(echo = TRUE)
load('Ch12_Exercise2_Global_warming.Rdata')
reg2a <- lm(humancause ~ male + white + educ + incomecat + age + party7, data = dta)
summary(reg2a)
min(predict(reg2a))
max(predict(reg2a))
reg2a2 <- lm(humancause ~ male + white + educ + incomecat + age + I(age^2) + party7, data = dta)
summary(reg2a2)
reg2b <- glm(humancause ~ male + white + educ + incomecat + age + I(age^2) + party7, family = binomial(link='probit'), data = dta)
summary(reg2b)
min(predict(reg2b))
max(predict(reg2b))
qnorm(min(predict(reg2b)))
min(predict(reg2b))
qnorm(-2.03322)
qnorm(-2.0332,mean = 0, sd = 1)
pnorm(-2.0332,mean = 0, sd = 1)
pnorm(-2.0332)
pnorm(0.83148)
pnorm(2.83148)
pnorm(0.83148)
View(dta)
reg2b <- glm(humancause ~ male + white + educ + incomecat + age + agesq + party7, family = binomial(link='probit'), data = dta)
summary(reg2b)
knitr::opts_chunk$set(echo = TRUE)
require(knitr)
require(haven)  ## install.packages("haven")
require(car)    ## install.packages("car")
require(AER)    ## install.packages("AER")
library(Hmisc)  ## use the describe command
library(mfx)
p11 = pnorm(reg2b$coefficients[1] + reg2b$coefficients[2]*dta$male + reg2b$coefficients[3]*dta$white + reg2b$coefficients[4]*dta$educ + reg2b$coefficients[5]* dta$incomecat + reg2b$coefficients[6]*age + reg2b$coefficients[7]*dta$agesq + reg2b$coefficients[8]* dta$party7)
p11 = pnorm(reg2b$coefficients[1] + reg2b$coefficients[2]*dta$male + reg2b$coefficients[3]*dta$white + reg2b$coefficients[4]*dta$educ + reg2b$coefficients[5]* dta$incomecat + reg2b$coefficients[6]*dta$age + reg2b$coefficients[7]*dta$agesq + reg2b$coefficients[8]* dta$party7)
p21 = pnorm(reg2b$coefficients[1] + reg2b$coefficients[2]*dta$male + reg2b$coefficients[3]*dta$white + reg2b$coefficients[4]*dta$educ + reg2b$coefficients[5]* dta$incomecat + reg2b$coefficients[6]*dta$age + reg2b$coefficients[7]*dta$agesq + reg2b$coefficients[8]* (dta$party7 + 1))
describe(p21-p11)
## Marginal effects approach
probitmfx(formula = humancause ~ male + white + educ + incomecat + age + agesq + party7, data = dta, atmean = FALSE)
## Observed-value, discrete differences approach
p12 = pnorm(reg2b$coefficients[1] + reg2b$coefficients[2]*0 + reg2b$coefficients[3]*dta$white + reg2b$coefficients[4]*dta$educ + reg2b$coefficients[5]* dta$incomecat + reg2b$coefficients[6]*dta$age + reg2b$coefficients[7]*dta$agesq + reg2b$coefficients[8]* dta$party7)
p22 = pnorm(reg2b$coefficients[1] + reg2b$coefficients[2]*1 + reg2b$coefficients[3]*dta$white + reg2b$coefficients[4]*dta$educ + reg2b$coefficients[5]* dta$incomecat + reg2b$coefficients[6]*dta$age + reg2b$coefficients[7]*dta$agesq + reg2b$coefficients[8]* dta$party7)
describe(p22-p12)
View(dta)
reg3 <- glm(warmagree ~as.factor(Treatment), family = binomial(link='probit'), data = dta)
reg3 <- glm(warmagree ~as.factor(treatment), family = binomial(link='probit'), data = dta)
reg3 <- glm(warmagree ~as.factor(treatment), family = binomial(link='probit'), data = dta)
summary(reg3)
dta$treatment1 = dta$treatment == 1
dta$treatment2 = dta$treatment == 2
dta$treatment3 = dta$treatment == 3
reg3 <- glm(warmagree ~ treatment1 + treatment2 +treatment3, family = binomial(link='probit'), data = dta)
summary(reg3)
probitmfx(formula = warmagree ~ treatment1 + treatment2 +treatment3, data = dta, atmean = FALSE)
load('Ch12_Exercise4_Congress_donors.RData')
View(dta)
dta$meetMC <- dta$staffrank == 5
reg4 <- glm(meetMC ~ treat_donor, family = binomial(link='probit'), data = dta)
summary(reg4)
pnorm(reg4$coefficients[1])
pnorm(reg4$coefficients[1] + reg4$coefficients[2])
dta$meetSenior <- dta$staffrank > 2
reg5 <- lm (meetSenior ~ treat_donor, data = dta)
summary(reg5)
dta$meetlow <- dta$staffrank == 1
reg6 <- lm (meetlow ~ treat_donor, data = dta)
summary(reg6)
## Load the dataset
btb <- read_dta('BanTheBox.dta')
## Load the dataset
btb <- read_dta('BanTheBox.dta')
head(btb)
## Load the dataset
btb <- read_dta('BanTheBox.dta')
View(btb)
View(reg4)
reg7 <- lm(response ~ crimbox + white + ged + crime + box_white + nocrime_box, data = btb)
summary(reg7)
reg72 <- lm(response ~ crimbox + white + ged, data =btb)
summary(reg72)
reg72 <- lm(response ~ crimbox + white +box_white + ged, data =btb)
summary(reg72)
reg72 <- lm(response ~ crimbox + black +box_white + ged, data =btb)
summary(reg72)
reg7 <- lm(response ~ crimbox + white + + box_white + crime + nocrime_box + ged , data = btb)
summary(reg7)
reg7 <- lm(response ~ crimbox + white + box_white + crime + nocrime_box + ged , data = btb)
summary(reg7)
reg7 <- lm(response ~ crimbox + white + box_white + crime + nocrime_box + ged , data = btb)
summary(reg7)
reg7 <- lm(response ~ black + crime + ged , data = btb[btb$crimbox == 0, ])
summary(reg7)
reg72 <- lm(response ~ black + crime + ged, data =btb[btb$crimbox == 1, ])
summary(reg72)
reg72 <- lm(response ~ black + ged, data =btb[btb$crimbox == 1, ])
summary(reg72)
reg7 <- lm(response ~ black + ged , data = btb[btb$crimbox == 0, ])
summary(reg7)
reg72 <- lm(response ~ black + crime + ged, data =btb[btb$crimbox == 1, ])
summary(reg72)
reg7b <- glm (response ~ black + ged, family = binomial(link='probit'), data = btb[btb$crimbox == 0, ])
summary(reg7b)
pnorm(reg7b$coefficients[1])
pnorm(reg7b$coefficients[1] + reg7b$coefficients[2])
## Probit model
reg72b <- glm (response ~ black + + crime + ged, family = binomial(link='probit'), data = btb[btb$crimbox == 1, ])
summary(reg72b)
## Probit model
reg72b <- glm (response ~ black + crime + ged, family = binomial(link='probit'), data = btb[btb$crimbox == 1, ])
summary(reg72b)
pnorm(reg72b$coefficients[1])
pnorm(reg72b$coefficients[1] + reg72b$coefficients[3])
reg7_ir <- lm(response ~ black + crime + ged , data = btb[btb$crimbox == 0, ])
summary(reg7_ir)
