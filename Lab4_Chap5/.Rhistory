require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
opts_knit$set(root.dir ="/Users/baileyma/Documents/Textbook/Textbook_labs")
load("Chapter5_Lab_Fertility.RData")
View(dta)
load("Chapter5_Lab_Fertility.RData")
reg1 <- lm(fertility ~ GDPpc1000, data = dta)
summary (reg1)
reg2 <- lm(fertility ~ GDPpc1000 + female_lifeexp, data = dta)
summary (reg2)
reg.1b <- lm(fertility ~ GDPpc1000, data = dta[!is.na(dta$female_lifeexp),])
summary(reg.1b)
#expected_
reg2$coefficients
reg_aux <- lm(female_lifeexp ~ GDPpc1000, data = dta[!is.na(dta$fertility),])
summary(reg_aux)
expected_beta1 = reg2$coefficients[2] + reg2$coefficients[3] * reg_aux$coefficient[2]
reg_aux <- lm(female_lifeexp ~ GDPpc1000, data = dta[!is.na(dta$fertility),])
summary(reg_aux)
expected_beta1 = reg2$coefficients[2] + reg2$coefficients[3] * reg_aux$coefficient[2]
expected_beta1
reg_aux <- lm(female_lifeexp ~ GDPpc1000, data = dta[!is.na(dta$fertility),])
#summary(reg_aux)
expected_beta1 = reg2$coefficients[2] + reg2$coefficients[3] * reg_aux$coefficient[2]
expected_beta1
reg2 <- lm(fertility ~ GDPpc1000 + female_lifeexp + laborpart_female, data = dta)
summary (reg2)
require(knitr)
require(haven)
require(AER)
require(car)
opts_chunk$set(echo = TRUE)
options(digits = 3)
opts_knit$set(root.dir ="/Users/baileyma/Documents/Textbook/Textbook_labs")
reg2 <- lm(fertility ~ GDPpc1000 + female_lifeexp, data = dta)
summary (reg2)
reg3 <- lm(fertility ~ GDPpc1000 + female_lifeexp + laborpart_female, data = dta)
summary (reg3)
# To test for multicollinearity we look at VIF (variance inflation factor)
vif (reg3)
seed.set(1)
set.seed(1)
dat$female_lifeexp_noisy = dat$female_lifeexp + rnorm(length(dat$female_lifeexp), sd = 15)
set.seed(1)
dta$female_lifeexp_noisy = dta$female_lifeexp + rnorm(length(dta$female_lifeexp), sd = 15)
reg4 <- lm(fertility ~ GDPpc1000 + female_lifeexp_noisy + laborpart_female, data = dta)
summary (reg4)
reg5 <- lm(scale(fertility) ~ scale(GDPpc1000) + scale(female_lifeexp) + scale(laborpart_female), data = dta)
summary (reg5)
reg5 <- lm(fertility ~ scale(GDPpc1000) + scale(female_lifeexp) + scale(laborpart_female), data = dta)
summary (reg5)
reg5 <- lm(scale(fertility) ~ scale(GDPpc1000) + scale(female_lifeexp) + scale(laborpart_female), data = dta)
summary (reg5)
reg6 <- lm(fertility ~ GDPpc1000 +female_lifeexp +laborpart_female +female_litrate, data = dta) # Unrestricted model
## Prepare data for the restricted model
dta$female_labor_plus_literacy = dta$laborpart_female + dta$female_literate
reg6 <- lm(fertility ~ GDPpc1000 +female_lifeexp +laborpart_female +female_litrate, data = dta) # Unrestricted model
## Prepare data for the restricted model
dta$female_labor_plus_literacy <- dta$laborpart_female + dta$female_literate
reg6 <- lm(fertility ~ GDPpc1000 +female_lifeexp +laborpart_female +female_litrate, data = dta) # Unrestricted model
## Prepare data for the restricted model
dta$female_labor_plus_literacy = dta$laborpart_female + dta$female_litrate
reg6b <- lm(fertility ~ GDPpc1000 +female_lifeexp +female_labor_plus_literacy, data = dta)  # restricted model
F.stat = ((summary(reg6)$r.squared - summary(reg6b)$r.squared)/1 ) /  ((1-summary(reg6)$r.squared)/(summary(reg4)$df[2] ) )
F.stat
reg6 <- lm(fertility ~ GDPpc1000 +female_lifeexp +laborpart_female +female_litrate, data = dta) # Unrestricted model
## Prepare data for the restricted model
dta$female_labor_plus_literacy = dta$laborpart_female + dta$female_litrate
reg6b <- lm(fertility ~ GDPpc1000 +female_lifeexp +female_labor_plus_literacy, data = dta)  # restricted model
F.stat = ((summary(reg6)$r.squared - summary(reg6b)$r.squared)/1 ) /  ((1-summary(reg6)$r.squared)/(summary(reg6)$df[2] ) )
F.stat
qf(1-0.05, df1=1, df2= summary(reg6)$df[2])
## Unrestricted model is reg6
# Now we need to create a restricted model by forcing conditions
reg7 <- lm(fertility ~ GDPpc1000 +female_lifeexp, data = dta[(!is.na(dta$laborpart_female) & !is.na(dta$female_litrate)),])
## Unrestricted model is reg6
# Now we need to create a restricted model by forcing conditions
reg7 <- lm(fertility ~ GDPpc1000 +female_lifeexp, data = dta[(!is.na(dta$laborpart_female) & !is.na(dta$female_litrate)),])
F.stat1 = ((summary(reg6)$r.squared - summary(reg7)$r.squared)/1 )/((1-summary(reg6)$r.squared)/(summary(reg6)$df[2]))
qf(1-0.05, df1=1, df2= summary(reg6)$df[2])
## Unrestricted model is reg6
# Now we need to create a restricted model by forcing conditions
reg7 <- lm(fertility ~ GDPpc1000 +female_lifeexp, data = dta[(!is.na(dta$laborpart_female) & !is.na(dta$female_litrate)),])
F.stat1 = ((summary(reg6)$r.squared - summary(reg7)$r.squared)/1 )/((1-summary(reg6)$r.squared)/(summary(reg6)$df[2]))
F.stat1
qf(1-0.05, df1=1, df2= summary(reg6)$df[2])
## Unrestricted model is reg6
# Now we need to create a restricted model by forcing conditions
reg7 <- lm(fertility ~ GDPpc1000 +female_lifeexp, data = dta[(!is.na(dta$laborpart_female) & !is.na(dta$female_litrate)),])
F.stat1 = ((summary(reg6)$r.squared - summary(reg7)$r.squared)/2 )/((1-summary(reg6)$r.squared)/(summary(reg6)$df[2]))
F.stat1
qf(1-0.05, df1=1, df2= summary(reg6)$df[2])
reg8 <- lm(formula = fertility ~ GDPpc1000 + female_lifeexp + laborpart_female + female_litrate + laborpart_male + male_lifeexp, data = dta)
summary (reg8)
reg8 <- lm(formula = fertility ~ GDPpc1000 + female_lifeexp + laborpart_female + female_litrate + laborpart_male + male_lifeexp, data = dta)
summary (reg8)
vif (reg8)
