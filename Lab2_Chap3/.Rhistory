setwd("~/Desktop/GU/Stats/Lab2(Chapter3)")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#add your working directory here
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab2(Chapter3)")
dta <- load("data_chapter3_lab")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#add your working directory here
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab2(Chapter3)")
dta <- load("data_chapter3_lab.Rdata")
## If any of the packages do not exist in your environment (meaning you have not previously downloaded
## them) you should first install them using (for example):
## install.packages("haven")
## Load packages used in this session of R
require(haven)
require(knitr)
require(car)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#insert path to your working directory below
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab1")
# You cannot use setwd() with knitr, so use this command to set root directory where data is saved
dta <- read_dta("Ch2_lab_survey_data.dta")
# save the data as .Rdata format
save.image(file = "data_chapter3_lab.Rdata")
# To load this .Rdata file late,  use the load function: load("data_chapter3_lab.Rdata")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#add your working directory here
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab2(Chapter3)")
dta <- load("data_chapter3_lab.Rdata")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#add your working directory here
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab2(Chapter3)")
load("data_chapter3_lab.Rdata")
## If any of the packages do not exist in your environment (meaning you have not previously downloaded
## them) you should first install them using (for example):
## install.packages("haven")
## Load packages used in this session of R
require(haven)
require(knitr)
require(car)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#insert path to your working directory below
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab1")
# You cannot use setwd() with knitr, so use this command to set root directory where data is saved
dta <- read_dta("Ch2_lab_survey_data.dta")
dta$Arlington <- (dta$precinct == "AR49" | dta$precinct == "AR22" | dta$precinct == "AR2" |
dta$precinct == "AR18" | dta$precinct == "41" | dta$precinct == "4" | dta$precinct == "16" |
dta$precinct == "17" | (dta$precinct == "2" & dta$state == 4 & !is.na(dta$state)) |
dta$precinct == "31" | dta$precinct == "48")
dta$PrinceWilliam <- (
dta$precinct == "PW 101" | dta$precinct == "PW 104" | dta$precinct == "PW101" |
dta$precinct == "PW 401" | dta$precinct == "PW104" | dta$precinct == "PW402" |
dta$precinct == "PW406"|    dta$precinct == "401" | dta$precinct == "402" |
(dta$precinct == "104" & dta$state == "4" & !is.na(dta$state))
)
## How many observations are from Arlington
table(dta$Arlington)
## How many observations are from Prince William
table(dta$PrinceWilliam)
dta$DC <- (dta$state == 1)
table(dta$DC)
dta$MD <- (dta$state == 2)
table(dta$MD)
dta$OH <- (dta$state == 3)
table(dta$OH)
dta$VA <- (dta$state == 4)
table(dta$VA)
dta$age <- 2016 - dta$year_born
summary(dta$age)
dta$age[dta$year_born <= 1920] <- NA
dta$age[dta$year_born > 2016] <- NA
summary(dta$age)
dta$male <- (dta$gender == 1)
table(dta$male)
table(dta$gender)
summary(dta$therm_trump)
summary(dta$therm_clinton)
dta$therm_clinton[dta$therm_clinton > 100] <- NA
summary(dta$therm_clinton)
table(dta$education)
dta$education[dta$education == 4] <- NA
dta$education[dta$education == 5] <- 4
dta$education[dta$education == 6] <- 5
dta$education[dta$education == 7] <- 6
summary(dta$education)
# save the data as .Rdata format
save.image(file = "data_chapter3_lab.Rdata")
# To load this .Rdata file late,  use the load function: load("data_chapter3_lab.Rdata")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#add your working directory here
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab2(Chapter3)")
load("data_chapter3_lab.Rdata")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#add your working directory here
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab2(Chapter3)")
load("data_chapter3_lab.Rdata")
my_reg1 <- lm(dta$therm_trump ~ dta$education, data=dta)
summary(my_reg1)
install.packages("AER")
dta$education[4]
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#add your working directory here
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab2(Chapter3)")
load("Ch2_lab_survey_data.Rdata")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#add your working directory here
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab2(Chapter3)")
dta <- read_dta("Ch2_lab_survey_data.dta")
my_reg1 <- lm(dta$therm_trump ~ dta$education, data=dta)
summary(my_reg1)
dta$education[4]
predict(my_reg1)[4]
dta$therm_trump[4]
residuals(my_reg1)[4]
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2])
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education), jitter(dta$therm_trump))
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
#plot(jitter(dta$education), jitter(dta$therm_trump))
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education, amount=2), jitter(dta$therm_trump, amount=2))
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
jitter()
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,2))
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$therm_trump,2))
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$therm_trump,2), pch = 20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,3), pch = 20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,4), pch = 20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education), pch = 20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education), pch = 20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,7), pch = 20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,2), pch = 20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,2), pch = 20)
plot(jitter(dta$education,2), pch = 20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,2) ~ dta$therm_trump, pch = 20)
plot (dta$education, dta$therm_trump, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer", pch=20)
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,2) ~ dta$therm_trump, pch = 20, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer")
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,2) ~ jitter(dta$therm_trump,2), pch = 20, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer")
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$therm_trump,2) ~ jitter(dta$education,2) , pch = 20, xlab="Education", ylab="Feeling Thermometer to Trump", main="Relationship between Education and Trump Feeling Thermometer")
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
require(knitr)
require(haven)
require(AER)
opts_chunk$set(echo = TRUE)
options(digits = 3)
#add your working directory here
opts_knit$set(root.dir ="~/Desktop/GU/Stats/Lab2(Chapter3)")
dta <- read_dta("Ch2_lab_survey_data.dta")
coeftest(my_reg1, vcov.=vcovHC(my_reg1,type = "HC1"))
my_reg2 <- lm(dta$therm_clinton ~ dta$education, data=dta)
summary(my_reg2)
View(my_reg2)
plot(jitter(dta$education,2), jitter(dta$therm_clinton,2), pch = 20, xlab="Education", ylab="Feeling Thermometer of Clinton", main="Relationship between Education and Clinton Feeling Thermometer")
abline (a = coef(my_reg1)[1], b=coef(my_reg1)[2], col="red")
plot(jitter(dta$education,2), jitter(dta$therm_clinton,2), pch = 20, xlab="Education", ylab="Feeling Thermometer of Clinton", main="Relationship between Education and Clinton Feeling Thermometer")
abline (a = coef(my_reg2)[1], b=coef(my_reg2)[2], col="red")
my_reg3 <- lm(dta$therm_clinton[1:400] ~ dta$education[1:400], data=dta)
summary(my_reg3)
View(my_reg3)
View(dta)
#First, we need to make a dummy variable for republican
dta$rep <- (dta$pol_party == 5 | dta$pol_party == 6 | dta$pol_party == 7)
my_reg4 <- lm (dta$therm_trump ~ dta$education, data = dta[dta$rep==1])
#First, we need to make a dummy variable for republican
dta$rep <- (dta$pol_party == 5 | dta$pol_party == 6 | dta$pol_party == 7)
my_reg4 <- lm (dta$therm_trump ~ dta$education, data = dta[dta$rep==1])
#First, we need to make a dummy variable for republican
dta$rep <- (dta$pol_party == 5 | dta$pol_party == 6 | dta$pol_party == 7)
my_reg4 <- lm (dta$therm_trump ~ dta$education, data = dta[dta$rep==1,])
#First, we need to make a dummy variable for republican
dta$rep <- (dta$pol_party == 5 | dta$pol_party == 6 | dta$pol_party == 7)
my_reg4 <- lm (dta$therm_trump ~ dta$education, data = dta[dta$rep==1,])
summary(my_reg4)
my_reg2 <- lm(dta$therm_clinton ~ dta$education)
summary(my_reg2)
#First, we need to make a dummy variable for republican
dta$rep <- (dta$pol_party == 5 | dta$pol_party == 6 | dta$pol_party == 7)
my_reg4 <- lm (therm_trump ~ education, data = dta[dta$rep==1,])
summary(my_reg4)
#First, we need to make a dummy variable for republican
dta$rep <- (dta$pol_party == 5 | dta$pol_party == 6 | dta$pol_party == 7)
my_reg4 <- lm (therm_trump ~ education, data = dta[dta$rep==1,])
coeftest(my_reg4, vcov. = vcovHC(my_reg4, type = "HC1"))
dta$female <- (dta$gender == 2)
my_reg5 <- lm(therm_trump ~ female, data = dta)
coeftest(my_reg5, vcov. = vcovHC(my_reg5, type = "HC1"))
therm_trump_female <- mean (dta$therm_trump[dta$female==1], na.rm=TRUE)
therm_trump_other <- mean (dta$therm_trump[dta$female==0], na,rm=TRUE)
therm_trump_female <- mean (dta$therm_trump[dta$female==1], na.rm=TRUE)
therm_trump_other <- mean (dta$therm_trump[dta$female==0], na.rm=TRUE)
therm_trump_female - therm_trump_other
therm_names <- grep("^therm",names(dta))
therm_names_no <- length (therm_names)
coeffmat <- matrix (NA, nrow = therm_names_no, ncol = 3)
row.names (coeffmat) <- colnames (dta[ ,therm_names])
colnames(coeffmat) <- c("Intercept", "Education", "Female")
therm_dta <- data.frame(dta[,therm_names])
for (i in 1 : therm_names_no) {
my_reg <- lm (therm_dta[,i] ~ dta$education + dta$female)
coeffmat[i,] = my_reg$coefficients
}
print (coeffmat)
therm_names <- grep("^therm",names(dta))
class (therm_names)
therm_names_no <- length (therm_names)
coeffmat <- matrix (NA, nrow = therm_names_no, ncol = 3)
row.names (coeffmat) <- colnames (dta[ ,therm_names])
colnames(coeffmat) <- c("Intercept", "Education", "Female")
therm_dta <- data.frame(dta[,therm_names])
for (i in 1 : therm_names_no) {
my_reg <- lm (therm_dta[,i] ~ dta$education + dta$female)
coeffmat[i,] = my_reg$coefficients
}
print (coeffmat)
therm_names <- grep("^therm",names(dta))
therm_names
therm_names_no <- length (therm_names)
coeffmat <- matrix (NA, nrow = therm_names_no, ncol = 3)
row.names (coeffmat) <- colnames (dta[ ,therm_names])
colnames(coeffmat) <- c("Intercept", "Education", "Female")
therm_dta <- data.frame(dta[,therm_names])
for (i in 1 : therm_names_no) {
my_reg <- lm (therm_dta[,i] ~ dta$education + dta$female)
coeffmat[i,] = my_reg$coefficients
}
print (coeffmat)
therm_vars <- grep("^therm",names(dta))
therm_vars_no <- length (therm_vars)
coeffmat <- matrix (NA, nrow = therm_vars_no, ncol = 3)
row.names (coeffmat) <- colnames (dta[ ,therm_vars])
colnames(coeffmat) <- c("Intercept", "Education", "Female")
therm_dta <- data.frame(dta[,therm_vars])
for (i in 1 : therm_vars_no) {
my_reg <- lm (therm_dta[,i] ~ dta$education + dta$female)
coeffmat[i,] = my_reg$coefficients
}
print (coeffmat)
therm_vars <- grep("^therm",names(dta), value = TRUE)
therm_vars
therm_vars <- grep("^therm",names(dta))
therm_vars_no <- length (therm_vars)
coeffmat <- matrix (NA, nrow = therm_vars_no, ncol = 3)
row.names (coeffmat) <- colnames (dta[ ,therm_vars])
colnames(coeffmat) <- c("Intercept", "Education", "Female")
therm_dta <- data.frame(dta[,therm_vars])
for (i in 1 : therm_vars_no) {
my_reg <- lm (therm_dta[,i] ~ dta$education + dta$female)
coeffmat[i,] = my_reg$coefficients
}
print (coeffmat)
help (lapply)
therm_var_list <- dta[,therm_vars]
OLS.temp    = lapply(therm_var_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: " names(FeelingThermVar[counter]))))
therm_var_list <- dta[,therm_vars]
OLS.temp    = lapply(therm_var_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: " names(therm_var[counter]))))
therm_var_list <- dta[,therm_vars]
OLS.temp    = lapply(therm_var_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: ", names(therm_var[counter]))))
temp = lm(x ~ dta$education  + dta$female)
print(summary(temp))
temp }   )
therm_var_list <- dta[,therm_vars]
counte = 0
OLS.temp    = lapply(therm_var_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: ", names(therm_var[counter]))))
temp = lm(x ~ dta$education  + dta$female)
print(summary(temp))
temp }   )
therm_var_list <- dta[,therm_vars]
counter = 0
OLS.temp    = lapply(therm_var_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: ", names(therm_var[counter]))))
temp = lm(x ~ dta$education  + dta$female)
print(summary(temp))
temp }   )
therm_var_list <- dta[,therm_vars]
counter = 0
OLS.temp    = lapply(therm_vars_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: ", names(therm_vars[counter]))))
temp = lm(x ~ dta$education  + dta$female)
print(summary(temp))
temp }   )
therm_vars_list <- dta[,therm_vars]
counter = 0
OLS.temp    = lapply(therm_vars_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: ", names(therm_vars[counter]))))
temp = lm(x ~ dta$education  + dta$female)
print(summary(temp))
temp }   )
therm_vars_list <- dta[,therm_vars]
counter = 0
OLS.temp = lapply(therm_vars_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: ", therm_vars[counter])))
temp = lm(x ~ dta$education  + dta$female)
print(summary(temp))
temp }   )
therm_vars_list <- dta[,therm_vars]
counter = 0
OLS.temp = lapply(therm_vars_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: ", names(therm_vars[counter]))))
temp = lm(x ~ dta$education  + dta$female)
print(summary(temp))
temp }   )
therm_vars_list <- dta[,therm_vars]
counter = 0
OLS.temp = lapply(therm_vars_list, function(x) {
counter = counter + 1
print(noquote(c("Dependent variable: ", names(dta [,therm_vars[counter]]))))
temp = lm(x ~ dta$education  + dta$female)
print(summary(temp))
temp }   )
